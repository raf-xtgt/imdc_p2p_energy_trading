

\documentclass[journal, twocolumn]{IEEEtran}
% \documentclass[journal, twocolumn]{article}
% \usepackage[utf8]{inputenc}


\usepackage{lipsum}% http://ctan.org/pkg/lipsum
\usepackage{multicol}% http://ctan.org/pkg/multicols
\usepackage{graphicx}% http://ctan.org/pkg/graphicx
\usepackage{hyperref}


% correct bad hyphenation here
\hyphenation{op-tical net-works semi-conduc-tor}


\begin{document}

% paper title
\title{Peer-to-Peer Optimal Solar Energy Trading using Proof-of-Authority Blockchain in Malaysia}

% author names
\author{
Mohammad Rafaquat Alam,
Teoh Jing Yang}

\markboth{Innovate Malaysia Design Competition 2022}{Innovate Malaysia Design Competition 2022}

% Abstract section start
\IEEEtitleabstractindextext{%
\begin{abstract}
With Malaysia's growing population and improved lifestyle, energy demand will only increase posing new challenges and problems to the energy sector. We propose a peer-to-peer web-based solar energy trading web application with the aim of optimizing energy usage by homes, such that those with higher electricity demand, can trade energy instead of paying higher bills. Thus also providing a second income stream for prosumers for their production of the tradable renewable solar energy. We use Machine Learning to predict energy consumption and production. Based on these predictions, users can buy and sell renewable energy. To ensure that maximum social welfare, we implement a Double Auction Mechanism (DAM) to optimally allocate tradable energy between prosumers. This transactions are stored on a Proof-of-Authority Distributed Ledger. The back end is built using Go programming language due to its speed, easy syntax and its increasing popularity as a server side language. The Angular framework is used for the front end development with Typescript used for middleware service implementation. Energy forecasting and DAM are written using Python libraries. Moreover, the platform uses the MongoDB NoSQL cloud database to securely and reliably store data. The Locust stress testing tool is used for performance benchmarking.
\end{abstract}
% Abstract section end

% Note that keywords are not normally used for peerreview papers.
\begin{IEEEkeywords}
Peer-to-Peer Trading, Solar Energy, Energy Forecasting, Double Auction, Blockchain, Frontend and Backend.
\end{IEEEkeywords}}

% make the title area
\maketitle
\IEEEdisplaynontitleabstractindextext
% Abstract section end
\section{Introduction}

\IEEEPARstart{A}{s} access to electricity increases with rising number of appliances and electrical devices in households, it is only fair that the energy consumption for the average person throughout history has been increasing steadily [1], [2]. Grids in Malaysia are managed by Tenaga Nasional Berhad (TNB), with electricity flowing through main transmission lines from the generators all the way to distribution lines which in turn is forwarded to residential areas. Without a doubt, as the energy demand and consumption keeps increasing, the transmission lines will have to be upgraded eventually [3]. This will cost copious amounts of time and money. If nothing is done the transmission lines will become extremely congested and unable to fulfill energy demands. Another downfall of the energy sector in some developed countries is that houses with solar panels, do not utilize the generated surplus energy to its full potential. They do not benefit in any way from the surplus energy they generate as all of it is dissipated to the grid for free [4]. This reduces morale for the general public as there is no incentive to produce the extra energy. This demotivates them from renewable energy generation and usage.

We combat the aforementioned problems with our peer-to-peer (P2P) energy trading web application that guarantees prosumer rewards by trading their produced solar energy. We use energy forecasting algorithms to predict energy consumption and production of users. This is used to calculate the optimal energy that can be allocated to the prosumer (buyer) from other prosumers (bidders) using the Double Auction Mechanism (DAM). The trading energy and fiat amount are stored as part of transactions in a block in a proof-of-authority distributed ledger. So buyers can order energy on the market and bidders can trade their produced energy in exchange for fiat currency. A portion of this fiat amount is also forwarded to TNB since the system relies on their grid network. This way electricity is not pulled from the mains resulting the overall demand and stress on the transmission lines to be reduced [4], [5]. Consequently, massive infrastructure upgrade costs and resources can be avoided. Furthermore, an incentive is created for people to own solar panels and start trading on the P2P platform, thus increasing the usage of renewable energy leading to a cleaner and greener environment.
\subsection{Organization of Paper}
Rest of the paper is organized as follows. Section II elaborates the methods used to implement the solution and the justification behind them. Detailed description of the results from each method are illustrated in Section III. Section IV discusses the issues in the system and the conclusion is provided in Section V. The appendix section describes the meaning of the equation variables from the Double Auction Mechanism.

\section{Methods}
The workflow of the application is that first energy forecasting is done to allow users to make orders and bids. Then DAM is run for optimal energy allocation and finally the transaction is stored in the blockchain. This is discussed in detail in the sections below.
\subsection{Energy Forecasting}
\subsubsection{Why Energy Forecasting}
For our implemented web application, we are assuming that the solar energy a prosumer generates is stored in a battery and the energy balance is stored in a smart metre in their homes. Using the stream of energy data from the smart metre, we forecast the amount of energy consumed as well as produced for a given day. While making an order, prosumers are shown their energy consumption forecast as in Fig. 1 and the production forecast, Fig. 2, is shown while bidding.
% Figure 1
% The energy consumption image start
\begin{wrapfigure}{\textwidth}
\centering
    \includegraphics[width=1.0\linewidth]{report_energy_consumption_forecast.png}
    \caption{Fig. 1. Prosumer (buyer) energy consumption forecast for the next 30 minutes}
    \label{fig:energy consumption forecast}
\end{wrapfigure}
\newline
% The energy consumption image end
By predicting the energy consumption, we can limit the prosumer (buyer) to a max energy value that they can order. This ensures that extremely large energy amounts, that even the grid cannot produce, are never ordered. Predicting the energy production limits the prosumer (bidder) to a max tradable energy value they can use to make a bid on an energy order. This ensures, that no prosumer makes a bid that exceeds the max amount they are expected to produce. 

\subsubsection{How Energy Forecasting is done}
The energy forecasting uses the machine learning technique of triple exponential smoothing [10] with additive trend and seasonality where the latest two data points are used for seasonal period [9]. The training also includes trend damping to prevent the rise of unrealistic trends and account for seasonal irregularity [10]. Once training is done using all the data points upto the current time of the day, a prediction is generated for energy consumption/production for the next 30 minutes from the current time. The prediction is the maximum energy forecast for consumption or production depending on what feature the prosumer is making use of. In terms of implementation, we used the python pandas library for data processing and statmodels for its exponentialSmoothing library.  
\subsection{Optimal Energy Allocation}
Here we discuss optimal energy allocation among prosumers. For more details regarding the equations please see [6] in references. 
\subsubsection{Social Welfare Maximisation (SWM)}
The SWM problem is the objective function that we hope to maximise to fulfill the energy request of prosumers by also maximising the energy supply from bidders whilst considering the cost to generate the energy. The amount of energy that would satisfy a prosumer (buyer) based on their smart metre data and energy consumption forecast is defined by the satisfaction function in [6] as: 
 \begin{equation}
 U_{i}(E_{i}^{n}) = w_{i}[\ln( n{\sum_{j=1}^{J}} (e_{ij}^{n} - e_{i}^{n, min}) +1 )]
\end{equation}
Next, we need to consider the cost incurred for the bidding prosumer when they trade the produced energy as per the production forecast. The cost function is given in [6] as:
\begin{equation}
 L_{i}(S_{j}^{n}) = c_{1}{\sum_{i=1}^{I}(s_{j}^{n})^2} + c_{2}{\sum_{i=1}^{I}(s_{ji}^{n})} 
\end{equation}
% Figure 2
% The energy production image start
\begin{wrapfigure}{\textwidth}
\centering
    \includegraphics[width=1.0\linewidth]{report_energy_production_forecast.png}
    \caption{Fig. 2. Prosumer energy production forecast for the next 30 minutes}
    \label{fig:energy production forecast}
\end{wrapfigure}
% The energy production image end
\newline
Now that we know how much energy would satisfy the prosumer as shown in Eq. (1) and the cost the bidder has to bear to produce and trade energy as in Eq. (2), we can determine the objective function for SWM as:
\begin{equation}
SWM : \max_{E_{n}, S_{n}} {\sum_{i=1}^{I}U_{i}(E_{i}^{n})} - {\sum_{j=1}^{J}L_{j}(S_{j}^{n})}
\end{equation}
The SWM is subject to the following constraints.
\begin{equation}
% Constraints image start
\begin{wrapfigure}{\textwidth}
\centering
    \includegraphics[width=0.6\linewidth]{constraints.png}
    \label{fig:double auction mechanism}
\end{wrapfigure}
% Constraints image end
\end{equation}

\subsubsection{Optimal Allocation Problem (OAP)}
The OAP, ensures no one prosumer can out bid everyone else, meaning all bidders are guaranteed to receive fiat reward as long as they bid on the order/request. Moreover TNB, as the grid providers, are also guaranteed to receive a reward since the system is designed to use their infrastructure to distribute the energy. The OAP is defined in [6] as :
 \begin{equation}
OAP : \max_{E^n, S^n}{\sum_{i=1}^{I}\sum_{j=1}^{J}}[b_{ij}^{n}{\ln}{e_{ij}^{n}} - p_{ji}^{n}s_{ji}^{n}]
\end{equation}
See Appendix for details. Both OAP and SWM have same subject to constraints as described in Eq. (4). Hence we carry out constraint relaxation through Lagrangian method [6] to find the local maximum [10]. So, energy receivable by a buyer, \begin{math} e_{ij}^{n} \end{math} and energy tradable by a bidder, \begin{math} s_{ji}^{n} \end{math}, after applying Lagrangian method is:
% Optimal energy receivable equation start
\begin{equation}
    e_{ij}^{n} = \frac{b_{ij}^{n}[ ( n\sum_{j=1}^{J} e_{ij}^{n} - e_{i}^{n, \min} ) +1 ]  }{n w_{i}}
\end{equation}
% Optimal energy receivable equation end
where \begin{math}e_{i}^{n, \min}\end{math} is the fixed minimum energy for a buyer, and:
% Optimal energy tradable equation start
\begin{equation}
    s_{ji}^{n} = 2c_{1}s_{ji}^{n} + c_{2}
\end{equation}
% Optimal energy tradable equation end
where, \begin{math}c_{1} \end{math} and \begin{math} c_{2}\end{math} are cost factors for the bidder.

\subsubsection{Double Auction Mechanism (DAM)}
The Double Auction Mechanism (DAM) solves the OAP via Lagrange method. As shown in Figure. 3, the application runs the DAM every 30 minutes taking all closed requests, looping through them and applying Eq. (6). and Eq. (7). on each bid.
% Figure 3
% The double auction image start
\begin{wrapfigure}{\textwidth}
    \includegraphics[width=1.06\linewidth, scale=1.5]{doubleAuction.png}
    \caption{\newline Fig. 3 Flowchart for double auction with demand and supply response}
    \label{fig:double auction mechanism}
\end{wrapfigure}
The Langrange scales down the bid energy amount by 10 to 15\% on average to prevent one bidder to dominate. So, once all the bidders are considered, the system checks whether the total energy demand made by the prosumer in the order is satisfied or not. If demand is satisfied, the remaining fiat amount that is not received by any bidder is transferred to TNB. If demand is not satisfied the surplus energy is taken from TNB. The rate of energy is capped at RM 0.20 per kWH $_{-}^{+} 20\%$ for all bidders as well as TNB. So, all bidders and TNB receive fiat currency as reward and buyer only pays for the amount of energy they need which is always fulfilled.


% The double auction image end
\subsection{Blockchain}
As shown in Fig. 4, the web application uses a Proof of Authority (PoA) consensus mechanism for the blockchain. 

% Figure 4
% The blockchain image start
\begin{figure*}[thpb]
    \centering
    \includegraphics[width=12.5cm, height=7.5cm]{blockchain_pipeline.png}
    \label{fig:blockchain}
\end{figure*}
% The blockchain image end

\subsubsection{Roles in the Blockchain}
\begin{itemize}
\item \emph{Validator}: A validator can verify transactions, create new blocks, add and discard blocks. Since we are using a Proof of Authority consensus mechanism, the validators undergo a rigorous registration process where they need to reveal their identities. Their reputation is at stake which means if they go against the interest of the prosumers, then their status as validators will be revoked and made known to the greater community. 

\item \emph{Clerk}: Clerks provide an additional layer of integrity check on the blockchain to ensure that validators do not conspire against the community. After the addition of every new block, they receive an updated local copy of the blockchain and user accounts. They use their local blockchain copy for doing integrity check on the central one. Unlike validators, any normal node can be made a clerk and they do not need to be rigorously identified. Clerks also provide the benefit of recovering the blockchain in case a validator account is compromised since they have a 51\% agreement on the valid blockchain. If validator accounts are compromised, then clerks can recover the system using their local copies.
\end{itemize}



\subsubsection{Blockchain pipeline}

\begin{itemize}
    \item \emph{Signing Smart Contracts}: After the DAM is run every 30 minutes, the new pool of transactions are broadcasted over the network to all the validators. The validator who receives the transaction pool first, will verify each transaction where they check whether the buyer has sufficient balance or not. If so, then that transaction is marked as verified and made part of a temporary block. If a buyer does not have the required balance then the transaction is marked invalid. Once all the transactions have been checked, and added to the temporary block, it is then broadcasted to all the remaining validators. These validators use their local copy of user accounts to verify each transaction in the temporary block. They then use the nonce of the temporary block to hash the transactions. If this hash matches with that of the temporary block for all validators, then the temporary one is made permanent and added to the central blockchain. The last validator who checks the hash finalizes/signs the smart contract.
    
\item \emph{Discarding Blocks}: If there is a validator who does not find a match for the hash, then their local copies of user accounts and blockchain is updated. Then the check is done again. If the hash fails to match a second time, then that block is discarded permanently. The non-match signifies that a transaction was manipulated in the central blockchain so the discarding is justified.

\item \emph{Integrity Check}: After the formation of 5 new blocks, an integrity check is triggered where the clerks verify each transaction in the latest permanent block in the central blockchain. They use their local copy of user accounts to verify each transaction in the latest block. Then use the nonce of the latest block from central blockchain to hash the transactions from the latest block in their local blockchain. If this hash matches that in the central blockchain for more than 50 percent of the clerks, then there is no issue but if the match is less than 50 percent, then an integrity check is issued. This goes through the local blockchain copy of each validator and compares the hash of the latest block. The validator(s) whose hash has a mismatch is then flagged since they may have tempered the central blockchain. In this case the validator access may be revoked thus safeguarding public interest. \end{itemize}

\section{Results}
We now discuss the results that we got from trying to fulfill the project promises in terms of social welfare by generating income, suitability of the application design and performance of the application and blockchain.
\subsection{Energy Trading As A Source Of Income}
As mentioned earlier, the DAM of the web application ensures that all bidders can make some fiat income as long as they make a bid. This serves as an incentive for more people to invest in equipment to generate electricity using solar panels. The income chart is  accessible from the user profile page as shown in Fig. 5. The chart shows the total income and energy traded for the days on which the user made a bid offer.


Since we are using the grid infrastructure provided by TNB, the application ensures that they receive some fiat reward for their participation in the energy trading. The income chart for TNB is shown in Fig. 6. 
\begin{table}[h!]
\caption{}
\centering
\begin{tabular}{ |p{2cm}|p{2.5cm}|p{2cm}|  }
\hline
\multicolumn{3}{|c|}{Potential Prosumer income} \\
\hline
Date & Sold Energy (kWh) & Income (RM) \\
\hline
20-04-2022 & 53.45 & 15.00 \\
24-04-2022 & 52.55 & 14.80 \\
30-04-2022 & 23.55 & 7.55 \\
\hline
\end{tabular}
\begin{tabular}{ |p{2cm}|p{2.5cm}|p{2cm}|  }
\hline
\multicolumn{3}{|c|}{Potential TNB income} \\
\hline
Date & Sold Energy (kWh) & Income (RM) \\
\hline
20-04-2022 & 125.33 & 30.45 \\
21-04-2022 & 247.54 & 52.45 \\
23-04-2022 & 165.63 & 42.33 \\
24-04-2022 & 325.67 & 77.82 \\
30-04-2022 & 220 & 50.05 \\
\hline
\end{tabular}
\end{table}

The TNB account is an admin account. No matter what bids are made on an energy request, TNB always provides a fraction of the energy demand and hence this income is always guaranteed. If there are no bids on an energy request, then the full demand is fulfilled by TNB. In such a case they receive the full price of the energy.  
\subsection{Blockchain Management}
The blockchain exists in two formats. One of them is the centralised one, stored in the database and the other is a local copy stored in the validators' and clerks' device as a .JSON file.
\subsubsection{Blockchain on the frontend of web application}
 As shown in Fig. 7, the central blockchain is available to all users from the "blockchain" page of the web application. The index, hash, nonce and the previous hash is shown for each block.

\begin{wrapfigure}{\textwidth}
\centering
    \includegraphics[width=1.0\linewidth]{web_app_blockchain_2.png}
    \caption{\newline Fig. 7. Index, Hash, Previous Hash and Nonce on frontend}
    \label{fig:transaction info}
\end{wrapfigure}
\newline
\newline
% Blockchain in the web-app end
In addition to these, when the info icon is clicked, users can see some general information regarding the transactions in each block: the buyer, total energy and fiat traded and the income TNB generates from this transaction. This is shown in Fig. 8.
\newline
% Block info start
\begin{wrapfigure}{\textwidth}
\centering
    \includegraphics[width=0.6\linewidth, height=5cm]{transaction_info.png}
    \caption{\newline Fig. 8. Transaction information in the block}
    \label{fig:transaction info}
\end{wrapfigure}
% Block info end

\subsubsection{Blockchain on the backend of web application}
As mentioned before, the backend stores the blockchain in a central database as shown in Fig. 9. This is used as the primary blockchain throughout the system. The frontend uses the data available in this blockchain. 
% The blockchain in the central database start
\begin{wrapfigure}{\textwidth}
\centering
    \includegraphics[width=1.0\linewidth]{db_blockchain.png}
    \caption{\newline Fig. 9. Blockchain as stored centrally using mongodb}
    \label{fig:transaction info}
\end{wrapfigure}
\newline
% The blockchain in the central database end
The other blockchain format is a local copy stored in the validators' and clerks' device as a .JSON file and this is shown in Fig. 10. As discussed before, the application uses this local copy to verify transactions and check the hash in the central database before finalizing the blocks. The app always updates the local copy using the central one when the verification and integrity checks are done. This means there is no chance for clerks and validators to edit the local copy and manipulate the central blockchain.

% The local copy of blockchain start
\begin{wrapfigure}{\textwidth}
\centering
    \includegraphics[width=1.0\linewidth, height=4.5cm]{local_blockchain.png}
    \caption{Fig. 10. Snippet of a block stored in the local blockchain file}
    \label{fig:Local copy of blockchain}
\end{wrapfigure}
% The local copy of blockchain end

\subsection{Web Application Testing} 
\subsubsection{Load Testing} When the platform is eventually released to the public, it has to serve lots of users concurrently without any issues. We used a swarming tool called Locust to simulate such scenarios. The load testing simulates 100 normal users concurrently using the system. Each user first visits the homepage, creates an order, makes a bid, visits the marketpage and finally the blockchain page. Such sequence ensures real user behaviour when the system is deployed. Fig. 11 and Fig.12 respectively show the system performance when handling concurrent user requests and system responses. From both graphs, we can see that there are no failures meaning the system works as intended under normal loads.

% Load test request handling start
\begin{wrapfigure}{\textwidth}
\centering
    \includegraphics[width=1.0\linewidth]{request_charts.png}
    \caption{\newline Fig. 11. Handling concurrent requests on backend servers.}
    \label{fig:Load testing via request handling}
\end{wrapfigure}
% Load test request handling end
\newline

% Load test response handling start
\begin{wrapfigure}{\textwidth}
\centering
    \includegraphics[width=1.0\linewidth]{response_times.png}
    \caption{\newline Fig. 12. System responding to concurrent user requests.}
    \label{fig:Load testing via response handling}
\end{wrapfigure}
% Load test response handling end


\subsubsection{Stress Testing}
Stress testing is done to find out at what capacity the system fails. This will help us determine which upgraded database version to use during deployment since the current one is using the free cluster service from mongodb. It also shows us how gracefully the system fails. The results from stress testing are shown in Fig. 13 and Fig. 14 respectively. In both cases the request failures and response time started to increase when we hit the 1000 user threshold.

% Stress test request handling start
\begin{wrapfigure}{\textwidth}
\centering
    \includegraphics[width=1.0\linewidth]{stress_test_request_chart.png}
    \caption{\newline Fig. 13. Request handling  by backend servers under high stress.}
    \label{fig:Stress testing via request handling}
\end{wrapfigure}
% Stress test request handling end

% Stress test response handling start
\begin{wrapfigure}{\textwidth}
\centering
    \includegraphics[width=1.0\linewidth]{stress_test_response_chart.png}
    \caption{\newline Fig. 14.  Response handling by backend servers under high stress.}
    \label{fig:Stress testing via response handling}
\end{wrapfigure}
% Stress test response handling end
\subsubsection{Blockchain Performance}
As the web application is still in prototype phase, the hashing of blocks were kept to the lowest difficulty, that is each block is considered hashed, when there is nonce that returns one zero at the very start of the hash string. With this level of difficulty, we tested the blockchain mining time with increasing transaction size as shown in Fig. 15. Since the hashing/mining algorithm only increments the nonce and checks for zero character at the start of the hash string, there is no specific observation. However, in the real world scenario, as block size increases with increasing transaction sizes, the difficulty would need to be increased and hence the mining time will increase as well. 
% Mining time vs total transaction size per block start
\begin{wrapfigure}{\textwidth}
\centering
    \includegraphics[width=1.0\linewidth]{trns_size_per_block.png}
    \caption{\newline Fig. 15. Time taken to mine a block with increasing block size.}
    \label{fig: Mining time vs total transaction size per block start}
\end{wrapfigure}
% Mining time vs total transaction size per block end

\subsection{Source Code}
The web application over a period of 6 months from December 2021 to May 2022. The code is made available at: \url{https://gitlab.com/mohammad_rafaquat_alam/imdc_p2p_energy_trading} A demonstration video is made available at this link to showcase the usage of the web application.

\section{Discussion}
\subsection{Security Concerns}
The key security issue of the system is that the private and public keys of all the users are hashed and stored in the database. Even though the hashing algorithm is not reversible this is still not good software development practice. Attackers can launch a dictionary attack with a known hash table and therefore obtain the real private key. So, further work needs to be done to write a mechanism to store and extract the private key of users from the user devices as opposed to the database.

\subsection{Database Upgrade}
As shown in the results section, the free mongodb database clusters that are used are not suitable for large scale use. The system crashes when 1,000 users are using the system concurrently. To fix, this funding is required to upgrade to a better and reliable mongodb service. The underlying database code would remain the same so this fix is very simple.

\section{Conclusion}
Based on all the previous sections, it is clear that the Blockchain technology is here to stay and keep penetrating even more industries. P2P Optimal Solar Energy trading has a huge potential to make ripples through the energy industry.  In conclusion, team MY157 have successfully implemented a peer to peer optimal solar energy trading platform using blockchain technology.



\section{Acknowledgement}
This piece of work would have not been possible without the support of our family, friends and university professors and their firm belief in my potential. The team is immensely grateful for the efforts of my supervisor Dr. Tan Wen Shan, for believing in our capabilities since he chose us for this project, and for supporting and trusting our decision making, until the very end of it.

\begin{thebibliography}{1}

\bibitem{IEEEhowto:kopka}
G. "U.S. energy facts explained - consumption and production - U.S. Energy Information
Administration (EIA)", Eia.gov, 2021.

\bibitem{IEEEhowto:kopka}
H. Ritchie and M. Roser, "Energy", Our World in Data, 2021.

\bibitem{IEEEhowto:kopka}
"Outline of Malaysia's electricity system - Power Engineering International", Power
Engineering International, 2021.

\bibitem{IEEEhowto:kopka}
J. Yang, A. Paudel, H. B. Gooi, and H. D. Nguyen, “A proof-of-stake public blockchain
based pricing scheme for peer-to-peer energy trading,” Applied Energy, vol. 298, p. 117154,
2021.
\bibitem{IEEEhowto:kopka}
S. Aggarwal and N. Kumar, “A consortium blockchain-based energy trading for demand
response management in vehicle-to-grid,” IEEE Transactions on Vehicular Technology, vol.
70, no. 9, pp. 9480–9494, 2021.


\bibitem{IEEEhowto:kopka}
The consortium paper 

\bibitem{IEEEhowto:kopka}
The demand and supply one by Dr. Tan

\bibitem{IEEEhowto:kopka}
Proof of Authority

\bibitem{IEEEhowto:kopka}
Time-series Forecasting - Complete Tutorial (indian guy)

\bibitem{IEEEhowto:kopka}
A Gentle Introduction to Exponential Smoothing for Time Series Forecasting in Python

\bibitem{IEEEhowto:kopka}
A Gentle Introduction To Method Of Lagrange Multipliers
\end{thebibliography}


\end{document}
